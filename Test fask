local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Plow Hub - Blox Fruits",
    SubTitle = "V1.11",
    TabWidth = 155,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Custom",
    CustomTheme = {
        Background = Color3.fromRGB(50, 50, 50),
        Accent = Color3.fromRGB(230, 190, 255),
        Text = Color3.fromRGB(255, 255, 255)
    },
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "swords" })
}

-- Thông tin game Blox Fruits
local gameInfo = loadstring(game:HttpGet("https://raw.githubusercontent.com/plowgame/thongtin/refs/heads/main/thongtinbloxfruit"))()
local quests = gameInfo.quests
local mobsByLevel = gameInfo.mobsByLevel

local selectedWeapon = "Melee" -- Mặc định là Melee

Tabs.Main:AddDropdown("Weapon Selection", {
    Title = "Chọn Vũ Khí",
    Values = {"Melee", "Sword", "Gun"},
    Multi = false,
    Default = 1
}, function(value)
    selectedWeapon = value
end)

local function equipWeapon()
    local backpack = game.Players.LocalPlayer.Backpack
    local character = game.Players.LocalPlayer.Character

    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name == selectedWeapon then
            character.Humanoid:EquipTool(tool)
            return
        end
    end
end

local autoFarmEnabled = false

Tabs.Main:AddToggle("Auto Farm Level", {Title = "Auto Farm Level", Default = false}, function(value)
    autoFarmEnabled = value
    if autoFarmEnabled then
        equipWeapon()
        startAutoFarm()
        local TweenService = game:GetService("TweenService")

local function smoothMove(targetPos)
    local player = game.Players.LocalPlayer
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local hrp = character.HumanoidRootPart
        local goal = {CFrame = CFrame.new(targetPos + Vector3.new(0, 5, 0))}
        local tweenInfo = TweenInfo.new((hrp.Position - targetPos).Magnitude / 150, Enum.EasingStyle.Linear)
        TweenService:Create(hrp, tweenInfo, goal):Play()
        task.wait(tweenInfo.Time)
    end
end

local function getQuestNPC(level)
    for _, quest in pairs(quests) do
        if level >= quest.level then
            return quest.npc, quest.position, quest.enemies
        end
    end
    return nil, nil, nil
end

local function acceptQuest(npcName)
    local npc = workspace:FindFirstChild(npcName)
    if npc and npc:FindFirstChild("HumanoidRootPart") then
        smoothMove(npc.HumanoidRootPart.Position)
        task.wait(2)

        local success, err = pcall(function()
            game.ReplicatedStorage.Remotes.Quest.Accept:FireServer(npcName)
        end)
        
        if not success then
            warn("Lỗi khi nhận nhiệm vụ:", err)
        end
    end
end


local function farmMobs(mobList)
    for _, mob in pairs(mobsByLevel) do
        for _, targetMob in ipairs(mobList) do
            if mob.name == targetMob and mob.position then
                smoothMove(mob.position + Vector3.new(0, 10, 0))
                task.wait(1)
                while autoFarmEnabled do
                    local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        game.ReplicatedStorage.Remotes.Combat.Attack:FireServer()
                    end
                    task.wait(0.1)
                end
            end
        end
    end
end

function startAutoFarm()
    while autoFarmEnabled do
        local playerLevel = game.Players.LocalPlayer.Data.Level.Value
        local questNPC, questPosition, targetMobs = getQuestNPC(playerLevel)

        if questNPC and questPosition then
            smoothMove(questPosition)
            wait(3)
            acceptQuest(questNPC)
            wait(2)
            farmMobs(targetMobs)
        end
        task.wait(1) -- Tránh lag game
    end
end
    end
end)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})


